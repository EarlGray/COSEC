#!/bin/sh

BLDDIR=build
CD_IMG=cosec.iso
CD_DIR=$BLDDIR/iso

GRUB_DIR=$CD_DIR/boot/grub
SRC_DIR=$CD_DIR/src

die () {
    echo "Error: $@" >&2
    exit 1
}
warn () {
    echo "WARN: $@" >&2
}

[ -d $BLDDIR ] || die "Build directory not found at $BLDDIR"

mkdir -p $GRUB_DIR
cp res/menu.lst $GRUB_DIR/menu.lst
cp res/menu.lst $GRUB_DIR/grub.conf
cp res/stage2_eltorito $GRUB_DIR/

cp $BLDDIR/kernel $CD_DIR \
    || die "$BLDDIR/kernel not found"

cp $BLDDIR/boot.tar $CD_DIR \
    || warn "$BLDDIR/boot.tar not found"

cp usr/init $CD_DIR

mkdir -p $SRC_DIR/res $SRC_DIR/lib
cp -R include/ src/ usr/ $SRC_DIR/
cp -R lib/c lib/lua-5.2.2/ $SRC_DIR/lib/
cp res/menu.lst res/mkcd res/mkinitfs $SRC_DIR/res
cp README.md INSTALL.md TODO Makefile $SRC_DIR

echo "Files to delete from iso:"
find $CD_DIR -name '*.o' -o -name '*.a' -o -name '*tar.gz' -o -name '*.img' | xargs rm

# install xorriso on Ubuntu
#grub-mkrescue -o $CD_IMG $CD_DIR

MKISO=''
if which xorriso 2>&1 >/dev/null ; then
    MKISO='xorriso -as mkisofs'
elif which genisoimage 2>&1 >/dev/null ; then
    MKISO='genisoimage -quiet'
elif which mkisofs 2>&1 >/dev/null ; then
    MKISO='mkisofs'
else
    die "no xorriso/genisoimage/mkisofs found"
fi
echo "MKISO program is '$MKISO'"

$MKISO -R -V COSEC \
       -b boot/grub/stage2_eltorito -no-emul-boot -boot-load-size 4 -boot-info-table \
       -o $CD_IMG $CD_DIR

[ "$KEEP" ] || rm -r $CD_DIR
